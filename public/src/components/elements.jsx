
/**
***********************************************
* This is autogenerated file, do not edit it. *
***********************************************

* @file elements.js
* @description Elements is a library that allows you to create elements in a simple way.
* @version 1.0.0
* @license MIT
* @author @alphabit
* @see {@link}
**/

'use strict';
import React from "react";
import {elementsDict} from "@global/element-definition";
//import DIALOG from "@dialog";
const DIALOG = await import("./dialog.jsx");
//import NOTIFY from "@notify";
const NOTIFY = await import("./notify.jsx");
const SECTION_Comp = await import("./section.jsx");
const DIV_Comp = await import("./div.jsx");
const ROW_Comp = await import("./row.jsx");
const COL_Comp = await import("./col.jsx");
const CARD_Comp = await import("./card.jsx");
const PANEL_Comp = await import("./panel.jsx");
const BANNER_Comp = await import("./banner.jsx");
const BANNER_IMAGE_Comp = await import("./banner-image.jsx");
const TABS_Comp = await import("./tabs.jsx");
const GENERIC_Comp = await import("./generic.jsx");
const IMAGE_Comp = await import("./image.jsx");
const SLIDER_Comp = await import("./slider.jsx");
const CARRUSEL_Comp = await import("./carrusel.jsx");
const GALLERY_Comp = await import("./gallery.jsx");
const TEXT_BLOCK_Comp = await import("./text-block.jsx");
const TEXT_BLOCK_ICON_Comp = await import("./text-block-icon.jsx");
const BUTTON_Comp = await import("./button.jsx");
const LINK_Comp = await import("./link.jsx");
const MARKDOWN_Comp = await import("./markdown.jsx");
const TITLE_Comp = await import("./title.jsx");
const SUBTITLE_Comp = await import("./subtitle.jsx");
const PARAGRAPH_Comp = await import("./paragraph.jsx");
const STRIPE_Comp = await import("./stripe.jsx");
const STRIPE_EMBEBED_Comp = await import("./stripe-embebed.jsx");
const ELEMENT_TITLE_Comp = await import("./element-title.jsx");
const INPUT_Comp = await import("./input.jsx");
const PASSWORD_Comp = await import("./password.jsx");
const DATE_Comp = await import("./date.jsx");
const DATE_TIME_Comp = await import("./date-time.jsx");
const TIME_Comp = await import("./time.jsx");
const SELECT_Comp = await import("./select.jsx");
const TEXTAREA_Comp = await import("./textarea.jsx");
const TEXT_EDITOR_Comp = await import("./text-editor.jsx");
const CHECKBOX_Comp = await import("./checkbox.jsx");
const SWITCH_Comp = await import("./switch.jsx");
const ID_Comp = await import("./id.jsx");
const FORM_TABLE_Comp = await import("./form-table.jsx");
const MARKDOWN_INPUT_Comp = await import("./markdown-input.jsx");
const DESIGNER_Comp = await import("./designer.jsx");
const FILE_INPUT_Comp = await import("./file-input.jsx");
const FILE_UPLOADER_Comp = await import("./file-uploader.jsx");
const IMAGE_INPUT_Comp = await import("./image-input.jsx");
const COLOR_PICKER_Comp = await import("./color-picker.jsx");
const HTML = await import("./base-component.jsx");
//import { elementManage } from "/@tools/element-manage.";

class Elements{
   constructor(options={}){
      this.props = options;
   }

   tag(tagName, content=null){
      this.props.tagName = tagName;
      return React.createElement(HTML, this.props, content);
   }
   
   dialog(options, content=null){
      return React.createElement(DIALOG, options, content);
   }
   
   notify(options, content=null){
      return React.createElement(NOTIFY, options, content);
   }
}
   
const components = {
   [SECTION]: SECTION_Comp.default,
   [DIV]: DIV_Comp.default,
   [ROW]: ROW_Comp.default,
   [COL]: COL_Comp.default,
   [CARD]: CARD_Comp.default,
   [PANEL]: PANEL_Comp.default,
   [BANNER]: BANNER_Comp.default,
   [BANNER_IMAGE]: BANNER_IMAGE_Comp.default,
   [TABS]: TABS_Comp.default,
   [GENERIC]: GENERIC_Comp.default,
   [IMAGE]: IMAGE_Comp.default,
   [SLIDER]: SLIDER_Comp.default,
   [CARRUSEL]: CARRUSEL_Comp.default,
   [GALLERY]: GALLERY_Comp.default,
   [TEXT_BLOCK]: TEXT_BLOCK_Comp.default,
   [TEXT_BLOCK_ICON]: TEXT_BLOCK_ICON_Comp.default,
   [BUTTON]: BUTTON_Comp.default,
   [LINK]: LINK_Comp.default,
   [MARKDOWN]: MARKDOWN_Comp.default,
   [TITLE]: TITLE_Comp.default,
   [SUBTITLE]: SUBTITLE_Comp.default,
   [PARAGRAPH]: PARAGRAPH_Comp.default,
   [STRIPE]: STRIPE_Comp.default,
   [STRIPE_EMBEBED]: STRIPE_EMBEBED_Comp.default,
   [ELEMENT_TITLE]: ELEMENT_TITLE_Comp.default,
   [INPUT]: INPUT_Comp.default,
   [PASSWORD]: PASSWORD_Comp.default,
   [DATE]: DATE_Comp.default,
   [DATE_TIME]: DATE_TIME_Comp.default,
   [TIME]: TIME_Comp.default,
   [SELECT]: SELECT_Comp.default,
   [TEXTAREA]: TEXTAREA_Comp.default,
   [TEXT_EDITOR]: TEXT_EDITOR_Comp.default,
   [CHECKBOX]: CHECKBOX_Comp.default,
   [SWITCH]: SWITCH_Comp.default,
   [ID]: ID_Comp.default,
   [FORM_TABLE]: FORM_TABLE_Comp.default,
   [MARKDOWN_INPUT]: MARKDOWN_INPUT_Comp.default,
   [DESIGNER]: DESIGNER_Comp.default,
   [FILE_INPUT]: FILE_INPUT_Comp.default,
   [FILE_UPLOADER]: FILE_UPLOADER_Comp.default,
   [IMAGE_INPUT]: IMAGE_INPUT_Comp.default,
   [COLOR_PICKER]: COLOR_PICKER_Comp.default,
}

const getOptions = (options, content, e=null) => {
   if(content === null && (options && (typeof options === "string" || Array.isArray(options) || (typeof options === "object" && options.$$typeof === Symbol.for('react.element'))))){
      content = options;
      options = {};
   }
   options = options || {};
   options.tagName = e;
   if(e) options.element = e;

   return {options, content};
}

/**Define Elements ej: elements.div()**/
Object.entries(components).forEach(([element, classInstance]) => {
   Object.defineProperties(Elements.prototype, {
      [element]: {
         value: function (content=null) {
            this.props.element = element;
            this.props = {...this.props, def: elementsDict[element].def};
            this.props.meta ??= {};
            return React.createElement(classInstance, this.props, content);
         }
      }
   });
});
/**Define Elements**/

/**Define Components**/
const [Section,Div,Row,Col,Card,Panel,Banner,BannerImage,Tabs,Generic,Image,Slider,Carrusel,Gallery,TextBlock,TextBlockIcon,Button,Link,Markdown,Title,Subtitle,Paragraph,Stripe,StripeEmbebed,ElementTitle,Input,Password,Date,DateTime,Time,Select,Textarea,TextEditor,Checkbox,Switch,Id,FormTable,MarkdownInput,Designer,FileInput,FileUploader,ImageInput,ColorPicker] = Object.entries(components).map(([e, classInstance]) => {
   return (options=null, content = null) => {
      const opts = getOptions(options, content);
      opts.options = {...opts.options, def: elementsDict[e].def};
      opts.options.meta ??= {};

      return React.createElement(classInstance, opts.options, opts.content);
   }
});

const Dialog = (options=null, content=null) => {
   return React.createElement(DIALOG, options, content);
}

const Notify = (options=null, content=null) => {
   return React.createElement(NOTIFY, options, content);
}
/**Define Components**/

export {
   Section,Div,Row,Col,Card,Panel,Banner,BannerImage,Tabs,Generic,Image,Slider,Carrusel,Gallery,TextBlock,TextBlockIcon,Button,Link,Markdown,Title,Subtitle,Paragraph,Stripe,StripeEmbebed,ElementTitle,Input,Password,Date,DateTime,Time,Select,Textarea,TextEditor,Checkbox,Switch,Id,FormTable,MarkdownInput,Designer,FileInput,FileUploader,ImageInput,ColorPicker,Dialog,Notify
}

export const elements = (element) => {
   return new Elements(element);
}

export default (e, props, content) => {
   const elDict = elementsDict[e];
   if(!elDict){
      return React.createElement(e, props, content);
   }

   props = {...props, ...elDict};
   props.meta ??= {};

   return React.createElement(components[e], {...props, element: e}, content);
}
